-- For function TO_NUMBER

-- create new schema
drop schema if exists func_to_number;
create schema func_to_number;
set search_path=func_to_number;

CREATE TABLE tonumber (c1 int, c2 float4, c3 float8, c4 char(50), c5 varchar(50), c6 text);
INSERT INTO tonumber VALUES (1, 1.23, 1.23, '1.23', '1.23', '1.23');
INSERT INTO tonumber VALUES (2, 3.141567, 3.141567, '3.141567', '3.141567', '3.141567');
INSERT INTO tonumber VALUES (3, 202405291733, 202405291733, '202405291733', '202405291733', '3.141567');
INSERT INTO tonumber VALUES (4, NULL, NULL, NULL, NULL, NULL);
INSERT INTO tonumber VALUES (5, NULL, NULL, 'tonight', '12.34yesterday', 'sunday6.66');
INSERT INTO tonumber VALUES (6, CAST('NAN' as float4), CAST('NAN' as float8), 'nan', 'NAN', 'NaN');
INSERT INTO tonumber VALUES (7, 3.40282E+38, 1.79769313486231E+100, '3.40282E+38F', '3.40282E+38', '1.79769313486231E+308');

SELECT c1, c2, TO_NUMBER(c2) FROM tonumber ORDER BY c1;
SELECT c1, c3, TO_NUMBER(c3) FROM tonumber ORDER BY c1;

SELECT c1, c4, TO_NUMBER(c4) FROM tonumber WHERE c1 NOT IN (5, 7) ORDER BY c1;
SELECT c1, c4, TO_NUMBER(c4) FROM tonumber WHERE c1 = 5 ORDER BY c1; -- error: invalid input syntax for type numeric: "tonight"
SELECT c1, c4, TO_NUMBER(c4) FROM tonumber WHERE c1 = 7 ORDER BY c1; -- error: invalid input syntax for type numeric: "3.40282E+38F"

SELECT c1, c5, TO_NUMBER(c5) FROM tonumber WHERE c1 NOT IN (5) ORDER BY c1;
SELECT c1, c5, TO_NUMBER(c5) FROM tonumber WHERE c1 = 5 ORDER BY c1; -- error: invalid input syntax for type numeric: "12.34yesterday"

SELECT c1, c6, TO_NUMBER(c6) FROM tonumber WHERE c1 NOT IN (5) ORDER BY c1;
SELECT c1, c6, TO_NUMBER(c6) FROM tonumber WHERE c1 = 7 ORDER BY c1;
SELECT c1, c6, TO_NUMBER(c6) FROM tonumber WHERE c1 = 5 ORDER BY c1; -- error: invalid input syntax for type numeric: "sunday6.66"

select TO_NUMBER('2.00');;
select TO_NUMBER('2.11');
select TO_NUMBER('200');
select TO_NUMBER('2a.ab'); -- error: invalid input syntax for type numeric: "2a.ab"
select TO_NUMBER('a.ab'); -- error: invalid input syntax for type numeric: "a.ab"
select TO_NUMBER('1A3E');  -- error: invalid input syntax for type numeric: "1A3E"
select TO_NUMBER(2.11);

SELECT TO_NUMBER(1.79769313486231E+100);
SELECT TO_NUMBER(2.22507485850720E-100);
SELECT TO_NUMBER(1.79769313486231E+255);
SELECT TO_NUMBER(1.79769313486231E+300);
SELECT TO_NUMBER(1.79769313486231E+308);
SELECT TO_NUMBER(1.79769313486231E+309);
SELECT TO_NUMBER(1.79769313486231E+310);
SELECT TO_NUMBER(1.79769313486231E+6310); -- error: overflow. invalid input syntax for type numeric: "1.79769313486231E+6310"
SELECT TO_NUMBER('1.79769313486231E+100');
SELECT TO_NUMBER('2.22507485850720E-100');
SELECT TO_NUMBER('1.79769313486231E+310');
SELECT TO_NUMBER(1.79769313486231E+6310); -- error: overflow. invalid input syntax for type numeric: "1.79769313486231E+6310"
SELECT TO_NUMBER('1.79769313486231E+100');
SELECT TO_NUMBER('2.22507485850720E-100');
SELECT TO_NUMBER('1.79769313486231E+310');

-- with default
SELECT TO_NUMBER(c1 DEFAULT 3.14 ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c1 DEFAULT '3.14' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c1 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c1 DEFAULT NULL ON CONVERSION ERROR) FROM tonumber ORDER By c1;

SELECT TO_NUMBER('abd' DEFAULT c1 ON CONVERSION ERROR) FROM tonumber ORDER By c1;  -- error， Default param can't be ColumnRef
SELECT TO_NUMBER(3.14 DEFAULT c1 ON CONVERSION ERROR) FROM tonumber ORDER By c1;  -- error， Default param can't be ColumnRef

SELECT TO_NUMBER(c2 DEFAULT 3.14 ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c2 DEFAULT '3.14' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c2 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c2 DEFAULT NULL ON CONVERSION ERROR) FROM tonumber ORDER By c1;

SELECT TO_NUMBER(c3 DEFAULT 3.14 ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c3 DEFAULT '3.14' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c3 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c3 DEFAULT NULL ON CONVERSION ERROR) FROM tonumber ORDER By c1;

SELECT c1, TO_NUMBER(c4 DEFAULT 3.14 ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber WHERE c1 NOT IN (5, 7) ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber where c1 = 7 ORDER By c1; -- erro: invalid input syntax for type numeric: "3.14FDW"
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber where c1 = 5 ORDER By c1; -- error: invalid input syntax for type numeric: "3.14FDW"
SELECT c1, TO_NUMBER(c4 DEFAULT NULL ON CONVERSION ERROR) FROM tonumber ORDER By c1;

SELECT TO_NUMBER(c5 DEFAULT 3.14 ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c5 DEFAULT '3.14' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c5 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber ORDER By c1; -- error: invalid input syntax for type numeric: "3.14FDW"
SELECT TO_NUMBER(c5 DEFAULT NULL ON CONVERSION ERROR) FROM tonumber ORDER By c1;

SELECT TO_NUMBER(c6 DEFAULT 3.14 ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c6 DEFAULT '3.14' ON CONVERSION ERROR) FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c6 DEFAULT '3.14FDW' ON CONVERSION ERROR) FROM tonumber ORDER By c1;  -- error: invalid input syntax for type numeric: "3.14FDW"
SELECT TO_NUMBER(c6 DEFAULT NULL ON CONVERSION ERROR) FROM tonumber ORDER By c1;

SELECT TO_NUMBER(3.145 DEFAULT 'tomorrow' ON CONVERSION ERROR);
SELECT TO_NUMBER('today' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER('today' DEFAULT '3.14' ON CONVERSION ERROR);
SELECT TO_NUMBER('3.15today' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER('  6.66  ' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER('today' DEFAULT 'roll' ON CONVERSION ERROR);  -- error： invalid input syntax for type numeric: "roll"

select TO_NUMBER('1A3F' DEFAULT 199 ON CONVERSION ERROR, 'XXXX');
select TO_NUMBER('1A3E' DEFAULT 199 ON CONVERSION ERROR, 'XXXX');

-- with  fmt
SELECT TO_NUMBER(1.79769313486231E+100, '9G999D99');  -- error: overflow. numeric field overflow
SELECT TO_NUMBER(2.22507485850720E-100, '9G999D99');
select TO_NUMBER('100.00', '9G999D99');
select TO_NUMBER('100.1212', '9G999D99');
select TO_NUMBER('2a.ab', '9G999D99');
select TO_NUMBER('', '9G999D99');
select TO_NUMBER(' ', '9G999D99'); -- error: invalid input syntax for type numeric: " "
select TO_NUMBER('a.ab', '9G999D99'); -- error: invalid input syntax for type numeric: " "
select TO_NUMBER(2.11, '9G999D99');
select TO_NUMBER(25.123456, '9G999D99');
select TO_NUMBER(100.1212, '9G999D99');

/*
 * TO_NUMBER XXXX
 */
select TO_NUMBER('1A3F', 'XXXX');
select TO_NUMBER('1A3E', 'XXXX');
select TO_NUMBER('1A3E', 'XAXX');
select TO_NUMBER(null,'XXXX');
select TO_NUMBER('127.532','XXXX');
select TO_NUMBER('1234567890abcdefABCDEF','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');

--to_number only support 16 bytes hex to decimal conversion or plen less than 0
select TO_NUMBER('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
select TO_NUMBER('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF','xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
select TO_NUMBER('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');

create table TONUM_001(COL_NUM numeric);
insert into TONUM_001 values(TO_NUMBER('A0', 'X'));
insert into TONUM_001 values(TO_NUMBER('A0', 'XX'));
insert into TONUM_001 values(TO_NUMBER('A0', 'XXX'));
select COL_NUM as RESULT from TONUM_001;
drop table TONUM_001;

select TO_NUMBER('-ABF1','-xxxx');
select TO_NUMBER('AA','XXXZ');
select TO_NUMBER('-AA','-XX');
select TO_NUMBER('AA','-XX');
select TO_NUMBER('-AA','XX');
select TO_NUMBER('+AA','XX');
select TO_NUMBER('+AA','XX');
select TO_NUMBER('AA','X');
select TO_NUMBER('aa','x');
select TO_NUMBER('AA.A','XXX.X');
select TO_NUMBER('A0','XX X');
select TO_NUMBER('A0','XX.X');
select TO_NUMBER('A0','+xxx');
select TO_NUMBER('A0','-xxx');

SELECT TO_NUMBER('-34,338,492', '99G999G999');
SELECT TO_NUMBER('-34,338,492.654,878', '99G999G999D999G999');
SELECT TO_NUMBER('<564646.654564>', '999999.999999PR');
SELECT TO_NUMBER('0.00001-', '9.999999S');
SELECT TO_NUMBER('5.01-', 'FM9.999999S');
SELECT TO_NUMBER('5.01-', 'FM9.999999MI');
SELECT TO_NUMBER('5 4 4 4 4 8 . 7 8', '9 9 9 9 9 9 . 9 9');
SELECT TO_NUMBER('.01', 'FM9.99');
SELECT TO_NUMBER('.0', '99999999.99999999');
SELECT TO_NUMBER('0', '99.99');
SELECT TO_NUMBER('.-01', 'S99.99');
SELECT TO_NUMBER('.01-', '99.99S');
SELECT TO_NUMBER(' . 0 1-', ' 9 9 . 9 9 S');

-- with default and fmt
SELECT TO_NUMBER(c1 DEFAULT 3.14 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c1 DEFAULT '3.14' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c1 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c1 DEFAULT NULL ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;

SELECT TO_NUMBER('abd' DEFAULT c1 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;  -- error， Default param can't be ColumnRef
SELECT TO_NUMBER(3.14 DEFAULT c1 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;  -- error， Default param can't be ColumnRef

SELECT TO_NUMBER(c2 DEFAULT 3.14 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c2 DEFAULT '3.14' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c2 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c2 DEFAULT NULL ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;

SELECT TO_NUMBER(c3 DEFAULT 3.14 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c3 DEFAULT '3.14' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c3 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c3 DEFAULT NULL ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;

SELECT c1, TO_NUMBER(c4 DEFAULT 3.14 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber WHERE c1 NOT IN (5, 7) ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber where c1 = 7 ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber where c1 = 5 ORDER By c1;
SELECT c1, TO_NUMBER(c4 DEFAULT NULL ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;

SELECT TO_NUMBER(c5 DEFAULT 3.14 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c5 DEFAULT '3.14' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c5 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c5 DEFAULT NULL ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;

SELECT TO_NUMBER(c6 DEFAULT 3.14 ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c6 DEFAULT '3.14' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c6 DEFAULT '3.14FDW' ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;
SELECT TO_NUMBER(c6 DEFAULT NULL ON CONVERSION ERROR, '99D999') FROM tonumber ORDER By c1;

SELECT TO_NUMBER(3.145 DEFAULT 'tomorrow' ON CONVERSION ERROR, '99D999');
SELECT TO_NUMBER('today' DEFAULT 3.14 ON CONVERSION ERROR, '99D999');
SELECT TO_NUMBER('today' DEFAULT '3.14' ON CONVERSION ERROR, '99D999');
SELECT TO_NUMBER('3.15today' DEFAULT 3.14 ON CONVERSION ERROR, '99D999');
SELECT TO_NUMBER('  6.66  ' DEFAULT 3.14 ON CONVERSION ERROR, '99D999');
SELECT TO_NUMBER('today' DEFAULT 'roll' ON CONVERSION ERROR, '99D999');  -- error： invalid input syntax for type numeric: "roll"

-- test overflow and null
SELECT TO_NUMBER(1.79769313486231E+100 DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER(2.22507485850720E-100 DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER('1.79769313486231E+100' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER('2.22507485850720E-100' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER(1.79769313486231E+310 DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER('1.79769313486231E+310' DEFAULT 3.14 ON CONVERSION ERROR);
SELECT TO_NUMBER(3.14 DEFAULT 1.79769313486231E+100 ON CONVERSION ERROR);
SELECT TO_NUMBER(3.14 DEFAULT '1.79769313486231E+100' ON CONVERSION ERROR);
SELECT TO_NUMBER(3.14 DEFAULT 1.79769313486231E+310 ON CONVERSION ERROR);
SELECT TO_NUMBER(3.14 DEFAULT '1.79769313486231E+310' ON CONVERSION ERROR);
SELECT TO_NUMBER('today' DEFAULT 1.79769313486231E+310 ON CONVERSION ERROR);
SELECT TO_NUMBER('today' DEFAULT '1.79769313486231E+310' ON CONVERSION ERROR);
SELECT TO_NUMBER(1.79769313486231E+100 DEFAULT NULL ON CONVERSION ERROR);
SELECT TO_NUMBER('1.79769313486231E+100' DEFAULT NULL ON CONVERSION ERROR);
SELECT TO_NUMBER(1.79769313486231E+310 DEFAULT NULL ON CONVERSION ERROR);
SELECT TO_NUMBER('1.79769313486231E+310' DEFAULT NULL ON CONVERSION ERROR);
SELECT TO_NUMBER(NULL DEFAULT 1.79769313486231E+100 ON CONVERSION ERROR);
SELECT TO_NUMBER(NULL DEFAULT '1.79769313486231E+100' ON CONVERSION ERROR);
SELECT TO_NUMBER(NULL DEFAULT 1.79769313486231E+310 ON CONVERSION ERROR);
SELECT TO_NUMBER(NULL DEFAULT '1.79769313486231E+310' ON CONVERSION ERROR);




CREATE TABLE tonumber_exec (c1 int, func_info text, res float4);

PREPARE default_param_text2(int, text, text) AS
    INSERT INTO tonumber_exec VALUES ($1, CONCAT('TO_NUMBER(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_NUMBER($2 DEFAULT $3 ON CONVERSION ERROR));

EXECUTE default_param_text2(1, '3.14', '6.66');
EXECUTE default_param_text2(2, '3.14#', '6.66');
EXECUTE default_param_text2(3, '#3.14', '6.66#');   -- error: invalid input syntax for type numeric: "6.66#"
EXECUTE default_param_text2(4, '  -3.14  ', '6.66');
EXECUTE default_param_text2(5, NULL, '6.66');
EXECUTE default_param_text2(6, '6.66', NULL);
EXECUTE default_param_text2(7, '1.79769313486231E+100', NULL); -- error: value out of range: overflow
EXECUTE default_param_text2(8, NULL, '1.79769313486231E+100');
EXECUTE default_param_text2(9, '1.79769313486231E+400', NULL); -- error: '1.79769313486231E+400' is out of range for type real
EXECUTE default_param_text2(10, NULL, '1.79769313486231E+400');

PREPARE default_param_num2(int, float8, float8) AS
    INSERT INTO tonumber_exec VALUES ($1, CONCAT('TO_NUMBER(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_NUMBER($2 DEFAULT $3 ON CONVERSION ERROR));

EXECUTE default_param_num2(11, 3.14, 6.666666);
EXECUTE default_param_num2(12, 3.14, NULL);
EXECUTE default_param_num2(13, NULL, 3.14);

EXECUTE default_param_text2(14, 1.79769313486231E+100, 3.14); -- error: value out of range: overflow
EXECUTE default_param_text2(15, 3.14, 1.79769313486231E+100);
EXECUTE default_param_text2(16, 1.79769313486231E+400, 3.14); -- error: is out of range for type real
EXECUTE default_param_text2(17, 3.14, 1.79769313486231E+400);
EXECUTE default_param_text2(18, 1.79769313486231E+400, NULL); -- error: is out of range for type real
EXECUTE default_param_text2(19, NULL, 1.79769313486231E+400);

PREPARE default_param_text_num(int, text, float8) AS
    INSERT INTO tonumber_exec VALUES ($1, CONCAT('TO_NUMBER(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_NUMBER($2 DEFAULT $3 ON CONVERSION ERROR));

EXECUTE default_param_text_num(20, '3.14', 6.666666);
EXECUTE default_param_text_num(21, '  +3.14 ', 6.666666);
EXECUTE default_param_text_num(22, '1.79769313486231E+100', 6.666666); -- error: value out of range: overflow
EXECUTE default_param_text_num(23, '6.666666', 1.79769313486231E+100);
EXECUTE default_param_text_num(24, '1.79769313486231E+400', 6.666666); -- error: is out of range for type real
EXECUTE default_param_text_num(25, '6.666666', 1.79769313486231E+400); -- error: is out of range for type double precision

PREPARE default_param_num_text(int, float8, text) AS
    INSERT INTO tonumber_exec VALUES ($1, CONCAT('TO_NUMBER(', $2, ' DEFAULT ', $3, ' ON CONVERSION ERROR)'), TO_NUMBER($2 DEFAULT $3 ON CONVERSION ERROR));

EXECUTE default_param_num_text(26, 1.79769313486231E+100, '6.666666');
EXECUTE default_param_num_text(27, 6.666666, '1.79769313486231E+100');
EXECUTE default_param_num_text(28, 1.79769313486231E+400, '6.666666');
EXECUTE default_param_num_text(29, 6.666666, '1.79769313486231E+400');

SELECT * FROM tonumber_exec ORDER BY c1;

DROP TABLE tonumber;
DROP TABLE tonumber_exec;

drop schema if exists func_to_number cascade;