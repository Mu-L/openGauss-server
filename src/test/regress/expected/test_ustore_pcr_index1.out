set enable_default_ustore_table = on;
-- test: build index
drop table if exists t1;
NOTICE:  table "t1" does not exist, skipping
create table t1(c1 int) with (storage_type=ustore);
insert into t1 values(generate_series(1,400));
create index t1_idx1 on t1(c1) with (index_type=pcr);
\di+
                                           List of relations
 Schema |  Name   | Type  | Owner  | Table | Size  |               Storage                | Description 
--------+---------+-------+--------+-------+-------+--------------------------------------+-------------
 public | t1_idx1 | index | yaoxin | t1    | 80 kB | {index_type=pcr,storage_type=ustore} | 
(1 row)

explain analyze select /*+ indexonlyscan(t1 t1_idx1)*/ count(*) from t1;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
--? Aggregate  (cost=.* rows=1 width=8) (actual time=.* rows=1 loops=1)
--?   ->  Index Only Scan using t1_idx1 on t1  (cost=.* rows=400 width=0) (actual time=.* rows=400 loops=1)
         Heap Fetches: 0
--? Total runtime: .* ms
(4 rows)

select /*+ indexonlyscan(t1 t1_idx1)*/ count(*) from t1;
 count 
-------
   400
(1 row)

select count(*) from t1;
 count 
-------
   400
(1 row)

-- test: build empty
drop table if exists t1;
create table t1(c1 int) with (storage_type=ustore);
create index t1_idx1 on t1(c1) with (index_type=pcr);
insert into t1 values(generate_series(1,400));
select /*+ indexonlyscan(t1 t1_idx1)*/ count(*) from t1;
 count 
-------
   400
(1 row)

select count(*) from t1;
 count 
-------
   400
(1 row)

-- test: build with table
drop table if exists t1;
create table t1(c1 int primary key) with (storage_type=ustore, index_type=pcr);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
\d+
                                                      List of relations
 Schema | Name | Type  | Owner  |  Size   |                               Storage                               | Description 
--------+------+-------+--------+---------+---------------------------------------------------------------------+-------------
 public | t1   | table | yaoxin | 0 bytes | {orientation=row,storage_type=ustore,index_type=pcr,compression=no} | 
(1 row)

\di+
                                           List of relations
 Schema |  Name   | Type  | Owner  | Table | Size  |               Storage                | Description 
--------+---------+-------+--------+-------+-------+--------------------------------------+-------------
 public | t1_pkey | index | yaoxin | t1    | 56 kB | {storage_type=ustore,index_type=pcr} | 
(1 row)

insert into t1 values(generate_series(1,400));
\di+
                                           List of relations
 Schema |  Name   | Type  | Owner  | Table | Size  |               Storage                | Description 
--------+---------+-------+--------+-------+-------+--------------------------------------+-------------
 public | t1_pkey | index | yaoxin | t1    | 80 kB | {storage_type=ustore,index_type=pcr} | 
(1 row)

select /*+ indexonlyscan(t1 t1_pkey)*/ count(*) from t1;
 count 
-------
   400
(1 row)

select count(*) from t1;
 count 
-------
   400
(1 row)

-- test: split
drop table if exists t1;
create table t1(c1 int) with (storage_type=ustore);
insert into t1 values(generate_series(1,400));
create index t1_idx1 on t1(c1) with (index_type=pcr);
delete t1 where c1 > 200;
select /*+ indexonlyscan(t1 t1_idx1)*/ count(*) from t1;
 count 
-------
   200
(1 row)

select count(*) from t1;
 count 
-------
   200
(1 row)

insert into t1 values(generate_series(201,800));
select /*+ indexonlyscan(t1 t1_idx1)*/ count(*) from t1;
 count 
-------
   800
(1 row)

select count(*) from t1;
 count 
-------
   800
(1 row)

-- testï¼šextend td
drop table if exists t1;
create table t1(c1 int) with (storage_type=ustore);
create index t1_idx1 on t1(c1) with (index_type=pcr);
\parallel on
insert into t1 values(generate_series(1,50));
insert into t1 values(generate_series(51,100));
insert into t1 values(generate_series(101,150));
insert into t1 values(generate_series(151,200));
insert into t1 values(generate_series(201,250));
\parallel off
select /*+ indexonlyscan(t1 t1_idx1)*/ count(*) from t1;
 count 
-------
   250
(1 row)

select count(*) from t1;
 count 
-------
   250
(1 row)

